@model DoctorAp.Models.Delivery

@{
    ViewData["Title"] = "Edit";
}

<h1>Edit</h1>

<h4>Delivery</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="DeliveryId" />
            <div class="form-group">
                <label asp-for="OrderNumber" class="control-label"></label>
                <input asp-for="OrderNumber" class="form-control" />
                <span asp-validation-for="OrderNumber" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Name" class="control-label"></label>
                <input asp-for="Name" class="form-control" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Email" class="control-label"></label>
                <input asp-for="Email" class="form-control" />
                <span asp-validation-for="Email" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Address" class="control-label"></label>
                <input asp-for="Address" class="form-control" />
                <span asp-validation-for="Address" class="text-danger"></span>
            </div>
            
            <div class="form-group">
                <label asp-for="City" class="control-label"></label>
                <input asp-for="City" class="form-control" />
                <span asp-validation-for="City" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="State" class="control-label"></label>
                <input asp-for="State" class="form-control" />
                <span asp-validation-for="State" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="PostalCode" class="control-label"></label>
                <input asp-for="PostalCode" class="form-control" />
                <span asp-validation-for="PostalCode" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Country" class="control-label"></label>
                <input asp-for="Country" class="form-control" />
                <span asp-validation-for="Country" class="text-danger"></span>
            </div>
            
            <div class="form-group">
                <label asp-for="PhoneNumber" class="control-label"></label>
                <input asp-for="PhoneNumber" class="form-control" />
                <span asp-validation-for="PhoneNumber" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="DeliveryDate" class="control-label"></label>
                <input asp-for="DeliveryDate" class="form-control" />
                <span asp-validation-for="DeliveryDate" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Progress" class="control-label"></label>
                <input asp-for="Progress" class="form-control" />
                <span asp-validation-for="Progress" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>


<!--This is the code to show the directions from the Pharmacy to the Adress-->
<script>
    function initMap() {
        var directionsService = new google.maps.DirectionsService();
        var directionsRenderer = new google.maps.DirectionsRenderer();
        var mapOptions = {
            zoom: 8,
            center: { lat: - 29.818521690804346, lng: 31.021309857017616 }, // This is where the map starts
                   
        };
        var map = new google.maps.Map(document.getElementById('map'), mapOptions);
        directionsRenderer.setMap(map);

        //Trying to insert address into the destination so that it shows where the user is going 
        var val = '@Model.Address';
        //var val = '	150 Josiah Gumede Rd, Pinetown CBD, Pinetown, 3620, South Africa'; //

        var request = {
            origin: '104 Smiso Nkwanyana Rd, Morningside, Durban, 4001', // Replace with your starting location
            destination: val, // Replace with your destination
           
            travelMode: 'DRIVING'
        };

        directionsService.route(request, function (response, status) {
            if (status === 'OK') {
                directionsRenderer.setDirections(response);
            }
        });
    }
</script>

<body onload="initMap()">
    <div id="map" style="height: 500px;"></div>
</body>


<!-- Thisis the code to choose the accurate address which needs to there for the directions to work -->

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}

    <script type="text/javascript" src="https://maps.googleapis.com/maps/api/js?key=AIzaSyC4fbfoTEFKl3mbb5ybGtwCtv4c7CpN2-o&libraries=places"></script>
    <script type="text/javascript">
        google.maps.event.addDomListener(window, 'load', function () {
            var places = new google.maps.places.Autocomplete(document.getElementById('Address'));
            google.maps.event.addListener(places, 'place_changed', function () {


                var place = places.getPlace();
                document.getElementById('Address').value = place.formatted_address;


                var componentForm = {
                    street_number: 'short_name',
                    route: 'long_name',
                    locality: 'long_name',
                    administrative_area_level_1: 'short_name',
                    country: 'long_name',
                    postal_code: 'short_name'
                };

                var addressObj = {}

                for (var i = 0; i < place.address_components.length; i++) {
                    var addressType = place.address_components[i].types[0];
                    if (componentForm[addressType]) {
                        addressObj[addressType] = place.address_components[i][componentForm[addressType]]
                    }
                }

                document.getElementById('City').value = addressObj.locality;
                document.getElementById('State').value = addressObj.administrative_area_level_1;
                document.getElementById('PostalCode').value = addressObj.postal_code;
                document.getElementById('Country').value = addressObj.country;

            });
        });</script>

}



